import Testing
@testable import Songbird
@testable import Markup

@Test("[HTML Specification]: All Events")
func testHtmlSpecEventAttrs() throws {
    #expect(div(.on.abort).render() == "<div onabort></div>")
    #expect(div(.on.afterprint).render() == "<div onafterprint></div>")
    #expect(div(.on.beforeprint).render() == "<div onbeforeprint></div>")
    #expect(div(.on.beforeunload).render() == "<div onbeforeunload></div>")
    #expect(div(.on.blur).render() == "<div onblur></div>")
    #expect(div(.on.cancel).render() == "<div oncancel></div>")
    #expect(div(.on.canplay).render() == "<div oncanplay></div>")
    #expect(div(.on.canplaythrough).render() == "<div oncanplaythrough></div>")
    #expect(div(.on.change).render() == "<div onchange></div>")
    #expect(div(.on.click).render() == "<div onclick></div>")
    #expect(div(.on.close).render() == "<div onclose></div>")
    #expect(div(.on.contextmenu).render() == "<div oncontextmenu></div>")
    #expect(div(.on.copy).render() == "<div oncopy></div>")
    #expect(div(.on.cuechange).render() == "<div oncuechange></div>")
    #expect(div(.on.cut).render() == "<div oncut></div>")
    #expect(div(.on.dblclick).render() == "<div ondblclick></div>")
    #expect(div(.on.drag).render() == "<div ondrag></div>")
    #expect(div(.on.dragend).render() == "<div ondragend></div>")
    #expect(div(.on.dragenter).render() == "<div ondragenter></div>")
    #expect(div(.on.dragleave).render() == "<div ondragleave></div>")
    #expect(div(.on.dragover).render() == "<div ondragover></div>")
    #expect(div(.on.dragstart).render() == "<div ondragstart></div>")
    #expect(div(.on.drop).render() == "<div ondrop></div>")
    #expect(div(.on.durationchange).render() == "<div ondurationchange></div>")
    #expect(div(.on.ended).render() == "<div onended></div>")
    #expect(div(.on.error).render() == "<div onerror></div>")
    #expect(div(.on.focus).render() == "<div onfocus></div>")
    #expect(div(.on.focusin).render() == "<div onfocusin></div>")
    #expect(div(.on.focusout).render() == "<div onfocusout></div>")
    #expect(div(.on.formdata).render() == "<div onformdata></div>")
    #expect(div(.on.hashchange).render() == "<div onhashchange></div>")
    #expect(div(.on.input).render() == "<div oninput></div>")
    #expect(div(.on.invalid).render() == "<div oninvalid></div>")
    #expect(div(.on.keydown).render() == "<div onkeydown></div>")
    #expect(div(.on.keypress).render() == "<div onkeypress></div>")
    #expect(div(.on.keyup).render() == "<div onkeyup></div>")
    #expect(div(.on.load).render() == "<div onload></div>")
    #expect(div(.on.loadeddata).render() == "<div onloadeddata></div>")
    #expect(div(.on.loadedmetadata).render() == "<div onloadedmetadata></div>")
    #expect(div(.on.loadstart).render() == "<div onloadstart></div>")
    #expect(div(.on.message).render() == "<div onmessage></div>")
    #expect(div(.on.mousedown).render() == "<div onmousedown></div>")
    #expect(div(.on.mouseenter).render() == "<div onmouseenter></div>")
    #expect(div(.on.mouseleave).render() == "<div onmouseleave></div>")
    #expect(div(.on.mousemove).render() == "<div onmousemove></div>")
    #expect(div(.on.mouseout).render() == "<div onmouseout></div>")
    #expect(div(.on.mouseover).render() == "<div onmouseover></div>")
    #expect(div(.on.mouseup).render() == "<div onmouseup></div>")
    #expect(div(.on.offline).render() == "<div onoffline></div>")
    #expect(div(.on.online).render() == "<div ononline></div>")
    #expect(div(.on.pagehide).render() == "<div onpagehide></div>")
    #expect(div(.on.pageshow).render() == "<div onpageshow></div>")
    #expect(div(.on.paste).render() == "<div onpaste></div>")
    #expect(div(.on.pause).render() == "<div onpause></div>")
    #expect(div(.on.play).render() == "<div onplay></div>")
    #expect(div(.on.playing).render() == "<div onplaying></div>")
    #expect(div(.on.popstate).render() == "<div onpopstate></div>")
    #expect(div(.on.progress).render() == "<div onprogress></div>")
    #expect(div(.on.ratechange).render() == "<div onratechange></div>")
    #expect(div(.on.resize).render() == "<div onresize></div>")
    #expect(div(.on.reset).render() == "<div onreset></div>")
    #expect(div(.on.scroll).render() == "<div onscroll></div>")
    #expect(div(.on.search).render() == "<div onsearch></div>")
    #expect(div(.on.seeked).render() == "<div onseeked></div>")
    #expect(div(.on.seeking).render() == "<div onseeking></div>")
    #expect(div(.on.select).render() == "<div onselect></div>")
    #expect(div(.on.stalled).render() == "<div onstalled></div>")
    #expect(div(.on.storage).render() == "<div onstorage></div>")
    #expect(div(.on.submit).render() == "<div onsubmit></div>")
    #expect(div(.on.suspend).render() == "<div onsuspend></div>")
    #expect(div(.on.timeupdate).render() == "<div ontimeupdate></div>")
    #expect(div(.on.toggle).render() == "<div ontoggle></div>")
    #expect(div(.on.unload).render() == "<div onunload></div>")
    #expect(div(.on.volumechange).render() == "<div onvolumechange></div>")
    #expect(div(.on.waiting).render() == "<div onwaiting></div>")
    #expect(div(.on.wheel).render() == "<div onwheel></div>")
}
