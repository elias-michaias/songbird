import Testing
@testable import Songbird
@testable import Markup


@Test("[HTML Specification]: All Attributes")
func testHtmlSpecAttrs() throws {
    // Global attributes
    #expect(div(.accesskey).render() == "<div accesskey></div>")
    #expect(div(.autocapitalize).render() == "<div autocapitalize></div>")
    #expect(div(.autofocus).render() == "<div autofocus></div>")
    #expect(div(.class).render() == "<div class></div>")
    #expect(div(.contenteditable).render() == "<div contenteditable></div>")
    #expect(div(.data("test")).render() == "<div data-test></div>")
    #expect(div(.dir).render() == "<div dir></div>")
    #expect(div(.draggable).render() == "<div draggable></div>")
    #expect(div(.hidden).render() == "<div hidden></div>")
    #expect(div(.id).render() == "<div id></div>")
    #expect(div(.inert).render() == "<div inert></div>")
    #expect(div(.inputmode).render() == "<div inputmode></div>")
    #expect(div(.is).render() == "<div is></div>")
    #expect(div(.itemid).render() == "<div itemid></div>")
    #expect(div(.itemprop).render() == "<div itemprop></div>")
    #expect(div(.itemref).render() == "<div itemref></div>")
    #expect(div(.itemscope).render() == "<div itemscope></div>")
    #expect(div(.itemtype).render() == "<div itemtype></div>")
    #expect(div(.lang).render() == "<div lang></div>")
    #expect(div(.nonce).render() == "<div nonce></div>")
    #expect(div(.part).render() == "<div part></div>")
    #expect(div(.slot).render() == "<div slot></div>")
    #expect(div(.spellcheck).render() == "<div spellcheck></div>")
    #expect(div(.style).render() == "<div style></div>")
    #expect(div(.tabindex).render() == "<div tabindex></div>")
    #expect(div(.title).render() == "<div title></div>")
    #expect(div(.translate).render() == "<div translate></div>")

    // Specific attributes for elements
    #expect(a(.download).render() == "<a download></a>")
    #expect(a(.href).render() == "<a href></a>")
    #expect(a(.hreflang).render() == "<a hreflang></a>")
    #expect(a(.ping).render() == "<a ping></a>")
    #expect(a(.referrerpolicy).render() == "<a referrerpolicy></a>")
    #expect(a(.rel).render() == "<a rel></a>")
    #expect(a(.target).render() == "<a target></a>")
    #expect(area(.alt).render() == "<area alt />")
    #expect(area(.coords).render() == "<area coords />")
    #expect(area(.download).render() == "<area download />")
    #expect(area(.href).render() == "<area href />")
    #expect(area(.ping).render() == "<area ping />")
    #expect(area(.referrerpolicy).render() == "<area referrerpolicy />")
    #expect(area(.rel).render() == "<area rel />")
    #expect(area(.shape).render() == "<area shape />")
    #expect(area(.target).render() == "<area target />")
    #expect(audio(.autoplay).render() == "<audio autoplay></audio>")
    #expect(audio(.controls).render() == "<audio controls></audio>")
    #expect(audio(.crossorigin).render() == "<audio crossorigin></audio>")
    #expect(audio(.loop).render() == "<audio loop></audio>")
    #expect(audio(.muted).render() == "<audio muted></audio>")
    #expect(audio(.preload).render() == "<audio preload></audio>")
    #expect(audio(.src).render() == "<audio src></audio>")
    #expect(base(.href).render() == "<base href />")
    #expect(base(.target).render() == "<base target />")
    #expect(blockquote(.cite).render() == "<blockquote cite></blockquote>")
    #expect(button(.autofocus).render() == "<button autofocus></button>")
    #expect(button(.disabled).render() == "<button disabled></button>")
    #expect(button(.form).render() == "<button form></button>")
    #expect(button(.formaction).render() == "<button formaction></button>")
    #expect(button(.formenctype).render() == "<button formenctype></button>")
    #expect(button(.formmethod).render() == "<button formmethod></button>")
    #expect(button(.formnovalidate).render() == "<button formnovalidate></button>")
    #expect(button(.formtarget).render() == "<button formtarget></button>")
    #expect(button(.name).render() == "<button name></button>")
    #expect(button(.type).render() == "<button type></button>")
    #expect(button(.value).render() == "<button value></button>")
    #expect(canvas(.height).render() == "<canvas height></canvas>")
    #expect(canvas(.width).render() == "<canvas width></canvas>")
    #expect(col(.span).render() == "<col span />")
    #expect(colgroup(.span).render() == "<colgroup span></colgroup>")
    #expect(data(.value).render() == "<data value></data>")
    #expect(datalist(.placeholder).render() == "<datalist placeholder></datalist>")
    #expect(del(.cite).render() == "<del cite></del>")
    #expect(del(.datetime).render() == "<del datetime></del>")
    #expect(details(.open).render() == "<details open></details>")
    #expect(embed(.height).render() == "<embed height />")
    #expect(embed(.src).render() == "<embed src />")
    #expect(embed(.type).render() == "<embed type />")
    #expect(embed(.width).render() == "<embed width />")
}
